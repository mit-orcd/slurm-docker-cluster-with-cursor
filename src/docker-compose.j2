# Define the services section of the Docker Compose file
services:
# Volume initializer - Prepares volumes before other services start
  volume_initializer:
    build: .
    hostname: volume_initializer
    networks:
      compute:
      inband:
        aliases:
          - volume_initializer.inband
      ib:
        aliases:
          - volume_initializer.ib
    volumes:
      - ./volume_inputs/root_ssh:/root/ssh_input:ro
      - root_ssh:/root/.ssh
    command: >
      sh -c "cp -r /root/ssh_input/* /root/.ssh/ && chmod 700 /root/.ssh && chmod 600 /root/.ssh/*"

# LDAP nodes - Authentication and directory services
{% for i in range(1, num_ldap_nodes + 1) %}
  ldap{{ "%03d"|format(i) }}:
    build: .
    hostname: ldap{{ "%03d"|format(i) }}
    networks:
      compute:
      inband:
        aliases:
          - ldap{{ "%03d"|format(i) }}.inband
      ib:
        aliases:
          - ldap{{ "%03d"|format(i) }}.ib
    expose:
      - 22
    volumes:
      - home:/home
      - etc_slurm:/etc/slurm
      - etc_munge:/etc/munge
      - root_ssh:/root/.ssh
    depends_on:
      - volume_initializer

{% endfor %}

# Login nodes - User access points with memory limits
{% for i in range(1, num_login_nodes + 1) %}
  {{ login_prefix }}{{ "%03d"|format(i) }}:
    build: .
    hostname: {{ login_prefix }}{{ "%03d"|format(i) }}
    mem_limit: {{ login_mem_limit }}G
    mem_reservation: {{ login_mem_limit }}G
    networks:
      compute:
      inband:
        aliases:
          - {{ login_prefix }}{{ "%03d"|format(i) }}.inband
      ib:
        aliases:
          - {{ login_prefix }}{{ "%03d"|format(i) }}.ib
    ports:
      - "{{ 6321 + i }}:22"
    volumes:
      - home:/home
      - etc_slurm:/etc/slurm
      - etc_munge:/etc/munge
      - root_ssh:/root/.ssh
    depends_on:
      - volume_initializer

{% endfor %}

# Compute nodes - Worker nodes for job execution
{% for i in range(1, num_compute_nodes + 1) %}
  node{{ "%04d"|format(i) }}:
    build: .
    hostname: node{{ "%04d"|format(i) }}
    networks:
      compute:
      inband:
        aliases:
          - node{{ "%04d"|format(i) }}.inband
      ib:
        aliases:
          - node{{ "%04d"|format(i) }}.ib
    expose:
      - 22
    volumes:
      - home:/home
      - etc_slurm:/etc/slurm
      - etc_munge:/etc/munge
      - root_ssh:/root/.ssh
    depends_on:
      - volume_initializer
{% endfor %}

# Service nodes - Additional utility nodes
{% for i in range(1, num_service_nodes + 1) %}
  service{{ "%04d"|format(i) }}:
    build: .
    hostname: service{{ "%04d"|format(i) }}
    networks:
      compute:
      inband:
        aliases:
          - service{{ "%04d"|format(i) }}.inband
      ib:
        aliases:
          - service{{ "%04d"|format(i) }}.ib
    expose:
      - 22
    volumes:
      - home:/home
      - etc_slurm:/etc/slurm
      - etc_munge:/etc/munge
      - root_ssh:/root/.ssh
    depends_on:
      - volume_initializer
{% endfor %}

# Slurm controller daemon - Manages the compute cluster
  slurmctld:
    build: .
    hostname: slurmctld
    networks:
      compute:
      inband:
        aliases:
          - slurmctld.inband
      ib:
        aliases:
          - slurmctld.ib
    expose:
      - 22
    volumes:
      - home:/home
      - etc_slurm:/etc/slurm
      - etc_munge:/etc/munge
      - slurmctld_state:/var/spool/slurmctld
      - root_ssh:/root/.ssh
    depends_on:
      - volume_initializer

# Slurm database daemon - Stores job and cluster information
  slurmdbd:
    build: .
    hostname: slurmdbd
    networks:
      compute:
      inband:
        aliases:
          - slurmdbd.inband
      ib:
        aliases:
          - slurmdbd.ib
    expose:
      - 22
    volumes:
      - home:/home
      - etc_slurm:/etc/slurm
      - etc_munge:/etc/munge
      - slurmdbd_state:/var/spool/slurmdbd
      - root_ssh:/root/.ssh
    depends_on:
      - volume_initializer

# Define persistent volumes for state and configuration
volumes:
  etc_munge:  # Munge authentication configuration
  etc_slurm:  # Slurm configuration files
  home:       # Shared home directory
  root_ssh:   # SSH configuration for root user
{% for i in range(1, num_compute_nodes + 1) %}
  node{{ "%04d"|format(i) }}_slurmd_state:  # State storage for each compute node
{% endfor %}
  slurmctld_state:  # State storage for the Slurm controller
  slurmdbd_state:   # State storage for the Slurm database

# Define the networks used by the cluster
networks:
  compute:  # Primary compute network
  inband:   # Internal management network
  ib:       # Additional internal network 